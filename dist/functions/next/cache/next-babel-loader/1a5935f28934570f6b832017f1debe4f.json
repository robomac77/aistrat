{"ast":null,"code":"import styled from 'styled-components';\nimport { themeGet } from 'styled-system';\nimport { base } from '../base';\nvar CheckBoxStyle = styled.div.withConfig({\n  displayName: \"checkboxstyle__CheckBoxStyle\",\n  componentId: \"zx7hai-0\"\n})([\"display:inline-flex;.reusecore__field-label{color:\", \";font-size:\", \"px;font-weight:\", \";}&.label_left{label{display:flex;align-items:center;.reusecore__field-label{margin-right:\", \"px;}}}&.label_right{label{display:flex;flex-direction:row-reverse;align-items:center;.reusecore__field-label{margin-left:\", \"px;}}}input[type='checkbox']{&.checkbox{opacity:0;position:absolute;margin:0;z-index:-1;width:0;height:0;overflow:hidden;pointer-events:none;&:checked + div{border-color:\", \";background-color:\", \";&::after{opacity:1;visibility:visible;transform:rotate(45deg) scale(1);}}}+ div{display:inline-flex;align-items:center;justify-content:center;width:16px;height:16px;border-radius:3px;border:1px solid \", \";position:relative;transition:all 0.3s ease;&::after{content:'';width:4px;height:10px;transform:rotate(45deg) scale(0.8);border-bottom:2px solid \", \";border-right:2px solid \", \";position:absolute;top:0;opacity:0;visibility:hidden;transition-property:opacity,visibility;transition-duration:0.3s;}}}\", \"\"], themeGet('colors.textColor', '#484848'), themeGet('fontSizes.4', '16'), themeGet('fontWeights.4', '500'), themeGet('space.3', '10'), themeGet('space.3', '10'), themeGet('colors.primary', '#028489'), themeGet('colors.primary', '#028489'), themeGet('colors.borderColor', '#dadada'), themeGet('colors.white', '#ffffff'), themeGet('colors.white', '#ffffff'), base); // prop types can also be added from the style functions\n\nCheckBoxStyle.propTypes = {};\nCheckBoxStyle.displayName = 'CheckBoxStyle';\nexport default CheckBoxStyle;","map":{"version":3,"sources":["/Users/nanakojootabil/VenCap - Empresario/SuperProps - React Next Landing Page Templates/SuperProps/node_modules/reusecore/src/elements/Checkbox/checkbox.style.js"],"names":["styled","themeGet","base","CheckBoxStyle","div","propTypes","displayName"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,IAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,0/BAINH,QAAQ,CAAC,kBAAD,EAAqB,SAArB,CAJF,EAKFA,QAAQ,CAAC,aAAD,EAAgB,IAAhB,CALN,EAMAA,QAAQ,CAAC,eAAD,EAAkB,KAAlB,CANR,EAeKA,QAAQ,CAAC,SAAD,EAAY,IAAZ,CAfb,EA4BIA,QAAQ,CAAC,SAAD,EAAY,IAAZ,CA5BZ,EA8CKA,QAAQ,CAAC,gBAAD,EAAmB,SAAnB,CA9Cb,EA+CSA,QAAQ,CAAC,gBAAD,EAAmB,SAAnB,CA/CjB,EA8DOA,QAAQ,CAAC,oBAAD,EAAuB,SAAvB,CA9Df,EAsEgBA,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAtExB,EAuEeA,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAvEvB,EAmFfC,IAnFe,CAAnB,C,CAsFA;;AACAC,aAAa,CAACE,SAAd,GAA0B,EAA1B;AAEAF,aAAa,CAACG,WAAd,GAA4B,eAA5B;AAEA,eAAeH,aAAf","sourcesContent":["import styled from 'styled-components';\r\nimport { themeGet } from 'styled-system';\r\nimport { base } from '../base';\r\n\r\nconst CheckBoxStyle = styled.div`\r\n  display: inline-flex;\r\n  /* Switch label default style */\r\n  .reusecore__field-label {\r\n    color: ${themeGet('colors.textColor', '#484848')};\r\n    font-size: ${themeGet('fontSizes.4', '16')}px;\r\n    font-weight: ${themeGet('fontWeights.4', '500')};\r\n  }\r\n\r\n  /* Switch label style when labelPosition on left */\r\n  &.label_left {\r\n    label {\r\n      display: flex;\r\n      align-items: center;\r\n      .reusecore__field-label {\r\n        margin-right: ${themeGet('space.3', '10')}px;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Switch label style when labelPosition on right */\r\n  &.label_right {\r\n    label {\r\n      display: flex;\r\n      flex-direction: row-reverse;\r\n      align-items: center;\r\n\r\n      .reusecore__field-label {\r\n        margin-left: ${themeGet('space.3', '10')}px;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Checkbox default style */\r\n  input[type='checkbox'] {\r\n    &.checkbox {\r\n      opacity: 0;\r\n      position: absolute;\r\n      margin: 0;\r\n      z-index: -1;\r\n      width: 0;\r\n      height: 0;\r\n      overflow: hidden;\r\n      pointer-events: none;\r\n\r\n      &:checked + div {\r\n        border-color: ${themeGet('colors.primary', '#028489')};\r\n        background-color: ${themeGet('colors.primary', '#028489')};\r\n        &::after {\r\n          opacity: 1;\r\n          visibility: visible;\r\n          transform: rotate(45deg) scale(1);\r\n        }\r\n      }\r\n    }\r\n    + div {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 16px;\r\n      height: 16px;\r\n      border-radius: 3px;\r\n      border: 1px solid ${themeGet('colors.borderColor', '#dadada')};\r\n      position: relative;\r\n      transition: all 0.3s ease;\r\n      &::after {\r\n        content: '';\r\n        width: 4px;\r\n        height: 10px;\r\n        transform: rotate(45deg) scale(0.8);\r\n        border-bottom: 2px solid ${themeGet('colors.white', '#ffffff')};\r\n        border-right: 2px solid ${themeGet('colors.white', '#ffffff')};\r\n        position: absolute;\r\n        top: 0;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition-property: opacity, visibility;\r\n        transition-duration: 0.3s;\r\n      }\r\n    }\r\n  }\r\n\r\n  /* support base component props */\r\n  ${base}\r\n`;\r\n\r\n// prop types can also be added from the style functions\r\nCheckBoxStyle.propTypes = {};\r\n\r\nCheckBoxStyle.displayName = 'CheckBoxStyle';\r\n\r\nexport default CheckBoxStyle;\r\n"]},"metadata":{},"sourceType":"module"}